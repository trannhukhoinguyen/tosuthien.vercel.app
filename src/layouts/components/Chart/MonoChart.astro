---
import "../../../styles/additional/MonoChart.scss";
import { InMasters, CnMasters }  from "../../../db/masters/AllMasterDb";
import config from "../../../config/config.json";
import {
  getLangFromUrl,
  getTranslations,
  supportedLang,
  slugSelector,
} from "../../../lib/utils/languageParser";

const { id } = Astro.props;
export function getStaticPaths() {
  const paths = supportedLang.map((lang) => ({
    params: { lang: lang || undefined },
  }));
  return paths;
}

let lang = getLangFromUrl(Astro.url);

const masterPeakId = id;
const maximumDisciples = 3;
const disabledLanguages = config.settings.disable_languages as string[];
if (disabledLanguages.includes(lang)) {
  lang = config.settings.default_language;
}

const flatMasterData = [...InMasters, ...CnMasters].flat();
const masterData = flatMasterData.map(masterLv0 =>
  ({
    id: 1,
    level: 1,
    name: masterLv0.name_en,
    disciples: flatMasterData
      ?.filter(masterLv1 => (masterLv1.id + '')?.slice(0, (masterLv1.id + '')?.indexOf('.') === 2))
      ?.map(masterLv1 => ({
        id: flatMasterData
          ?.filter(masterLv1 => (masterLv1.id + '')?.slice(0, (masterLv1.id + '')?.indexOf('.') === 2))
          ?.find(person=> masterLv0.disciples?.includes(person.name_en))?.id,
        level: 2,
        name: masterLv1.name_en,
        disciples: flatMasterData
          ?.filter(masterLv2 => masterLv2.id === 3)
          ?.map(masterLv2 => ({
            id: flatMasterData
             ?.filter(masterLv1 => (masterLv1.id + '')?.slice(0, (masterLv1.id + '')?.indexOf('.') === 3))
             ?.find(person=> masterLv1.disciples?.includes(person.name_en))?.id,
            level: 3,
            name: masterLv2?.name_en,
      })),
    })),
  })
);

let defaultQuery = '';
---

<script client:load>
  document.addEventListener('DOMContentLoaded', () => {
    // Extract search parameter from the URL
    const urlParams = new URLSearchParams(window.location.search);
    const searchQuery = urlParams.get('search') || "No search query found";

    // Update the defaultQuery variable
    let defaultQuery = searchQuery;

    // Update the div content with the search query
    document.getElementById('search-query').innerText = defaultQuery;

    // Optionally log it
    console.log("Updated defaultQuery:", defaultQuery);
  });
</script>

<div class="tree">
  <ul>
    {
      masterData.map(master =>
        <li>
          <a href="#">{master.name}</a>
          <ul>
            {
              master.disciples?.map(disciple =>
                <li>
                  <a href="#">{disciple.name}</a>
                  <ul>
                    {
                      disciple.disciples?.map(person =>
                        <li>
                          <a href="#">{person.name}</a>
                        </li>
                      )
                    }
                  </ul>
                </li>
              )
            }
          </ul>
        </li>
      )
    }
  </ul>
</div>
