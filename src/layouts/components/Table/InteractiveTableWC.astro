---
import Modal from "../../shortcodes/Modal";
import Tooltip from "../Tooltip.astro";
import "../../../styles/additional/InteractiveTableWC.scss";

const { mastersDb, lang } = Astro.props;
const uniqueMastersDb = [...new Map(mastersDb.map(item => [item.id, item])).values()];
const formatUrl = (url: String) => url.replace(/%20| /g, '-');
const removeTextBetweenParentheses = (url: String) => url.replace(/\s*\(.*?\)/g, '');
---


<html lang="en">
  <body>
    <div class="table-wrapper">

      <div class="controls">
        <button class="filter-btn" data-tag="all">All</button>
        <button class="filter-btn" data-tag="india">🇮🇳</button>
        <button class="filter-btn" data-tag="china">🇨🇳</button>
        <button class="filter-btn" data-tag="japan">🇯🇵</button>
        <button class="filter-btn" data-tag="vietnam">🇻🇳</button>
        <button class="filter-btn" data-tag="korea">🇰🇷</button>
        <button class="filter-btn" data-tag="linji">Linji</button>
        <button class="filter-btn" data-tag="guiyang">Guiyang</button>
        <button class="filter-btn" data-tag="yunmen">Yunmen</button>
        <button class="filter-btn" data-tag="caodong">Caodong</button>
        <button class="filter-btn" data-tag="fayan">Fayan</button>
        <button class="sort-btn">Sort by Name</button>
        <input type="text" class="search-input" placeholder="Search by English name...">
      </div>

      <div class="table-container">
        <table class="table">
          <thead class="table-header">
            <tr class="table-header-row">
              <th class="key-heading">ID</th>
              <th class="details-heading">English Name</th>
              <th class="details-heading">Japanese Name</th>
              <th class="details-heading">Chinese Name</th>
              <th class="details-heading">Vietnamese Name</th>
              <th class="date-heading">Birth - Death</th>
              <th class="tag-heading">Sect</th>
              <th class="tag-heading">Country</th>
              <th class="details-heading">Teachers</th>
              <th class="details-heading">Disciples</th>
              <th class="price-heading">Place</th>
              <th class="details-heading">References</th>
            </tr>
          </thead>

          <tbody>
          {
            uniqueMastersDb?.map((master) =>
              <tr>
                  <td>{ master.id }</td>
                  <td>
                    {
                      master.hasContent
                        ? <a
                            target="_blank"
                            href={"/masters/" + formatUrl(removeTextBetweenParentheses(master.name_en.toLowerCase()))}
                            title={ master.hasContent ? "read more" : master.other_name_en ? master.other_name_en : "" }
                            class="text-blue-700"
                          >
                            { master.name_en }
                          </a>
                        : <div title={ master.other_name_en ? master.other_name_en : "" }>{ master.name_en }</div>
                    }
                  </td>
                  <td><span title={ master.other_name_ja ? master.other_name_ja : "" }>{ master.name_ja }</span></td>
                  <td><span title={ master.other_name_zh ? master.other_name_zh : "" }>{ master.name_zh }</span></td>
                  <td><span title={ master.other_name_vi ? master.other_name_vi : "" }>{ master.name_vi }</span></td>
                  <td class="border-t-0 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap">
                    <div class="flex items-center">
                      <span class="mr-1">{ master.birth_death_time[0] }</span>
                      <span class="mr-1">{ master.birth_death_time[0] && master.birth_death_time[1] ? '⇨' : '' }</span>
                      <span class="mr-1">{ master.birth_death_time[1] }</span>
                      { master.birth_death_time.length ? '' : master.epoch }
                    </div>
                  </td>
                  <td><span class={ master.sect[0] === 'Linji'
                            ? "linji-tag"
                            : master.sect[0] === 'Caodong'
                            ? "caodong-tag"
                            : master.sect[0] === 'Guiyang'
                            ? "guiyan-tag"
                            : master.sect[0] === 'Yunmen'
                            ? "yunmen-tag"
                            : master.sect[0] === 'Fayan'
                            ? "fayan-tag" : ""
                  }>{ master.sect?.join(', ') }</span></td>
                  <td><span class={ master.country === '🇮🇳'
                            ? "india-tag"
                            : master.country === '🇨🇳'
                            ? "china-tag"
                            : master.country === '🇯🇵'
                            ? "japan-tag"
                            : master.country === '🇻🇳'
                            ? "vietnam-tag"
                            : "korea-tag"
                  }>{ master.country === '🇮🇳'? "India" : master.country === '🇨🇳' ? "China" : master.country === '🇯🇵' ? "Japan" : master.country === '🇻🇳' ? "Vietnam" : "Korea" }</span></td>
                  <td><span title={ master.teachers.length > 1 ? master.teachers?.slice(1)?.join(', ') : "" }>{ master.teachers[0] }</span></td>
                  <td><span title={ master.disciples.length > 1 ? master.disciples?.slice(1)?.join(', ') : "" }>{ master.disciples[0] }</span></td>
                  <td>{ master.place }</td>
                  <td>{ master.reference?.join(', ') }</td>
              </tr>
            )
          }
          </tbody>
        </table>
      </div>

      <div class="grid-container">
        {
          mastersDb.map((master) => <div class="grid-item">
              <div class="grid-top">
                <div><a href="#" class="grid-a">{ master.name_en }</a></div>
                <div class="grid-date">{ !master.birth_death_time?.every(day => day === '') ? master.birth_death_time.join(' - 🔥 ') : master.epoch ? master.epoch : '' }</div>
                {
                  master.sect.length === 1
                    ? <div><span class={ master.sect[0] === 'Linji'
                      ? "linji-tag"
                      : master.sect[0] === 'Caodong'
                        ? "caodong-tag"
                        : master.sect[0] === 'Guiyang'
                          ? "guiyan-tag"
                          : master.sect[0] === 'Yunmen'
                            ? "yunmen-tag"
                            : master.sect[0] === 'Fayan'
                              ? "fayan-tag" : ""
                    }>{ master.sect[0] }</span></div>
                    : master.sect.length > 1
                      ? master.sect.map(school => <div><span class={ master.sect[0] === 'Linji'
                        ? "linji-tag"
                        : master.sect[0] === 'Caodong'
                          ? "caodong-tag"
                          : master.sect[0] === 'Guiyang'
                            ? "guiyan-tag"
                            : master.sect[0] === 'Yunmen'
                              ? "yunmen-tag"
                              : master.sect[0] === 'Fayan'
                                ? "fayan-tag" : ""
                      }>{school}</span></div>)
                      : ''
                }
                <div><span class={ master.country === '🇮🇳'
                  ? "india-tag"
                  : master.country === '🇨🇳'
                    ? "china-tag"
                    : master.country === '🇯🇵'
                      ? "japan-tag"
                      : master.country === '🇻🇳'
                        ? "vietnam-tag"
                        : "korea-tag" }
                >{ master.country === '🇮🇳'? "India" : master.country === '🇨🇳' ? "China" : master.country === '🇯🇵' ? "Japan" : master.country === '🇻🇳' ? "Vietnam" : "Korea" }</span></div>
              </div>
              {
                master.teachers.length === 1
                  ? <span class="grid-desc">👨‍🏫 { master.teachers[0] }</span>
                  : master.teachers.length > 1
                    ? master.teachers.map(teacher => <div class="grid-desc">‍🏫 {teacher + ', '}</div>)
                    : ''
              }
              {
                master.disciples.length === 1
                  ? <span class="grid-desc">👨‍🎓 { master.disciples[0] }</span>
                  : master.disciples.length > 1
                    ? master.disciples.map(disciple => <div class="grid-desc">👨‍🎓 {disciple + ', '}</div>)
                    : ''
              }
              { master.place !== '-' ? <div class="grid-price">🏔⛩ { master.place }</div> : '' }
            </div>
          )
        }
      </div>
    </div>
  </body>
</html>

<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    const tableRows = document.querySelectorAll('.table tbody tr');
    const gridItems = document.querySelectorAll('.grid-item');

    tableRows.forEach((row, index) => {
      row.addEventListener('click', () => {
        highlightItem(index);
      });
    });

    gridItems.forEach((item, index) => {
      item.addEventListener('click', () => {
        highlightItem(index);
      });
    });

    function highlightItem(index) {
      tableRows.forEach(row => row?.classList.remove('highlight'));
      gridItems.forEach(item => item?.classList.remove('highlight'));

      tableRows[index]?.classList.add('highlight');
      gridItems[index]?.classList.add('highlight');
    }
  });

  document.addEventListener('DOMContentLoaded', () => {
    const tableRows = document.querySelectorAll('.table tbody tr');
    const gridItems = document.querySelectorAll('.grid-item');

    // Highlight rows and grid items on click
    tableRows.forEach((row, index) => {
      row.addEventListener('click', () => {
        highlightItem(index);
      });
    });

    gridItems.forEach((item, index) => {
      item.addEventListener('click', () => {
        highlightItem(index);
      });
    });

    function highlightItem(index) {
      tableRows.forEach(row => row?.classList.remove('highlight'));
      gridItems.forEach(item => item?.classList.remove('highlight'));

      tableRows[index]?.classList.add('highlight');
      gridItems[index]?.classList.add('highlight');
    }

    // Filter orders by tag
    document.querySelectorAll('.filter-btn').forEach(btn => {
      btn.addEventListener('click', () => {
        const tag = btn.getAttribute('data-tag');
        filterByTag(tag);
      });
    });

    function filterByTag(tag) {
      tableRows.forEach((row, index) => {
        const rowTag = row.querySelector('span').textContent.toLowerCase();
        console.log('rowTag', row.querySelector('span').textContent)
        console.log('tag', tag)
        if (tag === 'all' || rowTag.includes(tag)) {
          row.style.display = '';
          gridItems[index].style.display = '';
        } else {
          row.style.display = 'none';
          gridItems[index].style.display = 'none';
        }
      });
    }

    /// Sort orders by date
    document.querySelector('.sort-btn').addEventListener('click', () => {
      sortByName();
    });

    function sortByName() {
      const rowsArray = Array.from(tableRows);
      const itemsArray = Array.from(gridItems);

      rowsArray.sort((a, b) => {
        const textA = a.children[3].textContent;
        const textB = b.children[3].textContent;
        return textA - textB;
      });

      itemsArray.sort((a, b) => {
        const textA = a.querySelector('.grid-date').textContent;
        const textB = b.querySelector('.grid-date').textContent;
        return textA - textB;
      });

      const tableBody = document.querySelector('.table tbody');
      tableBody.innerHTML = '';
      rowsArray.forEach(row => tableBody.appendChild(row));

      const gridContainer = document.querySelector('.grid-container');
      gridContainer.innerHTML = '';
      itemsArray.forEach(item => gridContainer.appendChild(item));
    }

    // Search orders by details
    document.querySelector('.search-input').addEventListener('input', (event) => {
      const query = event.target.value.toLowerCase();
      searchMaster(query);
    });

    function searchMaster(query) {
      tableRows.forEach((row, index) => {
        const details = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
        if (details.includes(query)) {
          row.style.display = '';
          gridItems[index].style.display = '';
        } else {
          row.style.display = 'none';
          gridItems[index].style.display = 'none';
        }
      });
    }
  });
</script>
