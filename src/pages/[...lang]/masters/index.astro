---
import Table from "../../../layouts/shortcodes/Table.tsx";
import {
  CnMasters,
  AllSectMasters,
  InMasters,
  ViMasters,
  JpMasters,
} from "../../../db/masters/AllMasterDb.tsx";
import { site } from "@/config/config.json";
import '@/styles/table.css';
import Base from "@/layouts/Base.astro";
import { getListPage, getSinglePage } from "@/lib/contentParser.astro";
import {
  getLangFromUrl,
  getTranslations,
  supportedLang
} from "@/lib/utils/languageParser";
import PageHeader from "@/partials/PageHeader.astro";
import type { ContentEntryMap } from "astro:content";
import React, {useState} from "react";

export function getStaticPaths() {
  const paths = supportedLang.map((lang) => ({
    params: {
      lang: lang || undefined,
    },
  }));
  return paths;
}
const { lang } = Astro.params || getLangFromUrl(Astro.url);

const postIndex = await getListPage(
  "masters",
  lang as keyof ContentEntryMap
);
const posts = await getSinglePage("masters", lang as keyof ContentEntryMap);
const {
  in_masters, cn_masters, vi_masters, jp_masters, level_, level__,
} = await getTranslations(lang as keyof ContentEntryMap);

const [searchTerm, setSearchTerm] = useState<string>('');
const [currentPage, setCurrentPage] = useState<number>(1);

const handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {
  setSearchTerm(event.target.value.toLowerCase());
  setCurrentPage(1);
};
---

<Base
  title={ site.title + ' - Masters' }
  meta_title={ site.meta_title + ' - Masters' }
  description={ site.meta_description + ' - Masters' }
  image={'/images/meta-image-square-1.jpg'}
>
  <PageHeader title={"Zen Master"} />

  <div class="align-middle rounded-tl-lg rounded-tr-lg inline-flex w-full py-4 overflow-hidden bg-white shadow-lg px-12">
  <div class="flex justify-between">
    <div class="ml-3">
      <div class="w-full max-w-sm min-w-[200px] relative">
        <div class="relative">

          <input
            class="bg-white w-full pr-11 h-10 pl-3 py-2 bg-transparent placeholder:text-slate-400 text-slate-700 text-sm border border-slate-200 rounded transition duration-200 ease focus:outline-none focus:border-slate-400 hover:border-slate-400 shadow-sm focus:shadow-md"
            type="text"
            placeholder="Search by name..."
            value={searchTerm}
            onChange={handleSearch}
          />
          <button
            class="absolute h-8 w-8 right-1 top-1 my-auto px-2 flex items-center bg-white rounded "
            type="button"
          >
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="3"
                 stroke="currentColor" class="w-8 h-8 text-slate-600">
              <path stroke-linecap="round" stroke-linejoin="round"
                    d="m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z"/>
            </svg>
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

  <div class="container">
    <h2>{ in_masters }</h2>
    <Table client:load data={InMasters} lang={lang ? lang : 'vi'} />
  </div>

  <div class="container">
    <h2>{ cn_masters } - { level_ }</h2>
    <Table client:load data={CnMasters[0]} lang={lang ? lang : 'vi'}/>
  </div>

  {
    CnMasters
      ?.filter((master, index) => index !==0)
      ?.map((CnMaster, CnMasterIndex) =>
    <div class="container">
      <h2>{ cn_masters } - { level__ } {CnMasterIndex+1}</h2>
      <Table client:load data={CnMaster} lang={lang ? lang : 'vi'}/>
    </div>
      )
    }
</Base>
